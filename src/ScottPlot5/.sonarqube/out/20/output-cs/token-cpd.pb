ö_
_C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.Eto\EtoPlotMenu.cs
	namespace 	
	ScottPlot
 
. 
Eto 
; 
public

 
class

 
EtoPlotMenu

 
:

 
	IPlotMenu

 $
{ 
public 

string $
DefaultSaveImageFilename *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
$str; E
;E F
public 

List 
< 
ContextMenuItem 
>  
ContextMenuItems! 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
=@ A
newB E
(E F
)F G
;G H
readonly 
EtoPlot 
ThisControl  
;  !
public 

EtoPlotMenu 
( 
EtoPlot 
etoPlot &
)& '
{ 
ThisControl 
= 
etoPlot 
; 
Reset 
( 
) 
; 
} 
public 

ContextMenuItem 
[ 
] &
GetDefaultContextMenuItems 7
(7 8
)8 9
{ 
ContextMenuItem 
	saveImage !
=" #
new$ '
(' (
)( )
{ 	
Label 
= 
$str  
,  !
OnInvoke 
= 
OpenSaveImageDialog *
} 	
;	 

ContextMenuItem 
	copyImage !
=" #
new$ '
(' (
)( )
{ 	
Label   
=   
$str   '
,  ' (
OnInvoke!! 
=!!  
CopyImageToClipboard!! +
}"" 	
;""	 

return$$ 
new$$ 
ContextMenuItem$$ "
[$$" #
]$$# $
{$$% &
	saveImage$$' 0
,$$0 1
	copyImage$$2 ;
}$$< =
;$$= >
}%% 
public'' 

ContextMenu'' 
GetContextMenu'' %
(''% &
)''& '
{(( 
ContextMenu)) 
menu)) 
=)) 
new)) 
()) 
)))  
;))  !
foreach** 
(** 
var** 
curr** 
in** 
ContextMenuItems** -
)**- .
{++ 	
if,, 
(,, 
curr,, 
.,, 
IsSeparator,,  
),,  !
{-- 
menu.. 
... 
Items.. 
... 
AddSeparator.. '
(..' (
)..( )
;..) *
}// 
else00 
{11 
var22 
menuItem22 
=22 
new22 "
ButtonMenuItem22# 1
(221 2
)222 3
{224 5
Text226 :
=22; <
curr22= A
.22A B
Label22B G
}22H I
;22I J
menuItem33 
.33 
Click33 
+=33 !
(33" #
s33# $
,33$ %
e33& '
)33' (
=>33) +
curr33, 0
.330 1
OnInvoke331 9
(339 :
ThisControl33: E
)33E F
;33F G
menu44 
.44 
Items44 
.44 
Add44 
(44 
menuItem44 '
)44' (
;44( )
}55 
}66 	
return88 
menu88 
;88 
}99 
public;; 

readonly;; 
List;; 
<;; 

FileFilter;; #
>;;# $
FileDialogFilters;;% 6
=;;7 8
new;;9 <
(;;< =
);;= >
{<< 
new== 
(== 
)== 
{== 
Name== 
=== 
$str== "
,==" #

Extensions==$ .
===/ 0
new==1 4
string==5 ;
[==; <
]==< =
{==> ?
$str==@ E
}==F G
}==H I
,==I J
new>> 
(>> 
)>> 
{>> 
Name>> 
=>> 
$str>> #
,>># $

Extensions>>% /
=>>0 1
new>>2 5
string>>6 <
[>>< =
]>>= >
{>>? @
$str>>A F
,>>F G
$str>>H N
}>>O P
}>>Q R
,>>R S
new?? 
(?? 
)?? 
{?? 
Name?? 
=?? 
$str?? "
,??" #

Extensions??$ .
=??/ 0
new??1 4
string??5 ;
[??; <
]??< =
{??> ?
$str??@ E
}??F G
}??H I
,??I J
new@@ 
(@@ 
)@@ 
{@@ 
Name@@ 
=@@ 
$str@@ #
,@@# $

Extensions@@% /
=@@0 1
new@@2 5
string@@6 <
[@@< =
]@@= >
{@@? @
$str@@A G
}@@H I
}@@J K
,@@K L
newAA 
(AA 
)AA 
{AA 
NameAA 
=AA 
$strAA "
,AA" #

ExtensionsAA$ .
=AA/ 0
newAA1 4
stringAA5 ;
[AA; <
]AA< =
{AA> ?
$strAA@ E
}AAF G
}AAH I
,AAI J
newBB 
(BB 
)BB 
{BB 
NameBB 
=BB 
$strBB "
,BB" #

ExtensionsBB$ .
=BB/ 0
newBB1 4
stringBB5 ;
[BB; <
]BB< =
{BB> ?
$strBB@ C
}BBD E
}BBF G
,BBG H
}CC 
;CC 
publicEE 

voidEE 
OpenSaveImageDialogEE #
(EE# $
IPlotControlEE$ 0
plotControlEE1 <
)EE< =
{FF 
SaveFileDialogGG 
dialogGG 
=GG 
newGG  #
(GG# $
)GG$ %
{HH 	
FileNameII 
=II $
DefaultSaveImageFilenameII /
}JJ 	
;JJ	 

foreachLL 
(LL 
varLL 
currLL 
inLL 
FileDialogFiltersLL .
)LL. /
{MM 	
dialogNN 
.NN 
FiltersNN 
.NN 
AddNN 
(NN 
currNN #
)NN# $
;NN$ %
}OO 	
ifQQ 

(QQ 
dialogQQ 
.QQ 

ShowDialogQQ 
(QQ 
ThisControlQQ )
)QQ) *
==QQ+ -
DialogResultQQ. :
.QQ: ;
OkQQ; =
)QQ= >
{RR 	
varSS 
filenameSS 
=SS 
dialogSS !
.SS! "
FileNameSS" *
;SS* +
ifUU 
(UU 
stringUU 
.UU 
IsNullOrEmptyUU $
(UU$ %
filenameUU% -
)UU- .
)UU. /
returnVV 
;VV 
ifYY 
(YY 
!YY 
PathYY 
.YY 
HasExtensionYY "
(YY" #
filenameYY# +
)YY+ ,
)YY, -
filenameZZ 
+=ZZ 
$"ZZ 
$strZZ 
{ZZ  
dialogZZ  &
.ZZ& '
CurrentFilterZZ' 4
.ZZ4 5

ExtensionsZZ5 ?
[ZZ? @
$numZZ@ A
]ZZA B
}ZZB C
"ZZC D
;ZZD E
ImageFormat]] 
format]] 
=]]  
ImageFormatLookup]]! 2
.]]2 3
FromFilePath]]3 ?
(]]? @
filename]]@ H
)]]H I
;]]I J
	PixelSize^^ 
lastRenderSize^^ $
=^^% &
plotControl^^' 2
.^^2 3
Plot^^3 7
.^^7 8
RenderManager^^8 E
.^^E F

LastRender^^F P
.^^P Q

FigureRect^^Q [
.^^[ \
Size^^\ `
;^^` a
plotControl__ 
.__ 
Plot__ 
.__ 
Save__ !
(__! "
filename__" *
,__* +
(__, -
int__- 0
)__0 1
lastRenderSize__1 ?
.__? @
Width__@ E
,__E F
(__G H
int__H K
)__K L
lastRenderSize__L Z
.__Z [
Height__[ a
,__a b
format__c i
)__i j
;__j k
}`` 	
}aa 
publiccc 

voidcc  
CopyImageToClipboardcc $
(cc$ %
IPlotControlcc% 1
plotControlcc2 =
)cc= >
{dd 
	PixelSizeee 
lastRenderSizeee  
=ee! "
plotControlee# .
.ee. /
Plotee/ 3
.ee3 4
RenderManageree4 A
.eeA B

LastRendereeB L
.eeL M

FigureRecteeM W
.eeW X
SizeeeX \
;ee\ ]
byteff 
[ff 
]ff 
bytesff 
=ff 
plotControlff "
.ff" #
Plotff# '
.ff' (
GetImageff( 0
(ff0 1
(ff1 2
intff2 5
)ff5 6
lastRenderSizeff6 D
.ffD E
WidthffE J
,ffJ K
(ffL M
intffM P
)ffP Q
lastRenderSizeffQ _
.ff_ `
Heightff` f
)fff g
.ffg h
GetImageBytesffh u
(ffu v
)ffv w
;ffw x
MemoryStreamgg 
msgg 
=gg 
newgg 
(gg 
bytesgg #
)gg# $
;gg$ %
usinghh 
Bitmaphh 
bmphh 
=hh 
newhh 
(hh 
mshh !
)hh! "
;hh" #
	Clipboardii 
.ii 
Instanceii 
.ii 
Imageii  
=ii! "
bmpii# &
;ii& '
}jj 
publicll 

voidll 
ShowContextMenull 
(ll  
Pixelll  %
pixelll& +
)ll+ ,
{mm 
varnn 
menunn 
=nn 
GetContextMenunn !
(nn! "
)nn" #
;nn# $
menuoo 
.oo 
Showoo 
(oo 
ThisControloo 
,oo 
newoo "
Pointoo# (
(oo( )
(oo) *
intoo* -
)oo- .
pixeloo. 3
.oo3 4
Xoo4 5
,oo5 6
(oo7 8
intoo8 ;
)oo; <
pixeloo< A
.ooA B
YooB C
)ooC D
)ooD E
;ooE F
}pp 
publicrr 

voidrr 
Resetrr 
(rr 
)rr 
{ss 
Cleartt 
(tt 
)tt 
;tt 
ContextMenuItemsuu 
.uu 
AddRangeuu !
(uu! "&
GetDefaultContextMenuItemsuu" <
(uu< =
)uu= >
)uu> ?
;uu? @
}vv 
publicxx 

voidxx 
Clearxx 
(xx 
)xx 
{yy 
ContextMenuItemszz 
.zz 
Clearzz 
(zz 
)zz  
;zz  !
}{{ 
public}} 

void}} 
Add}} 
(}} 
string}} 
Label}}  
,}}  !
Action}}" (
<}}( )
IPlotControl}}) 5
>}}5 6
action}}7 =
)}}= >
{~~ 
ContextMenuItems 
. 
Add 
( 
new  
ContextMenuItem! 0
(0 1
)1 2
{3 4
Label5 :
=; <
Label= B
,B C
OnInvokeD L
=M N
actionO U
}V W
)W X
;X Y
}
 
public
 

void
 
AddSeparator
 
(
 
)
 
{
 
ContextMenuItems
 
.
 
Add
 
(
 
new
  
ContextMenuItem
! 0
(
0 1
)
1 2
{
3 4
IsSeparator
5 @
=
A B
true
C G
}
H I
)
I J
;
J K
}
 
} ±
eC:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.Eto\EtoPlotExtensions.cs
	namespace		 	
	ScottPlot		
 
.		 
Eto		 
;		 
internal 
static	 
class 
EtoPlotExtensions '
{ 
internal 
static 
Pixel 
Pixel 
(  
this  $
MouseEventArgs% 3
e4 5
)5 6
{ 
double 
x 
= 
e 
. 
Location 
. 
X 
;  
double 
y 
= 
e 
. 
Location 
. 
Y 
;  
return 
new 
Pixel 
( 
( 
float 
)  
x  !
,! "
(# $
float$ )
)) *
y* +
)+ ,
;, -
} 
internal 
static 
Control 
. 
MouseButton '
ToButton( 0
(0 1
this1 5
MouseEventArgs6 D
eE F
)F G
{ 
if 

( 
e 
. 
Buttons 
== 
MouseButtons %
.% &
Middle& ,
), -
return 
Control 
. 
MouseButton &
.& '
Middle' -
;- .
else 
if 
( 
e 
. 
Buttons 
== 
MouseButtons *
.* +
Primary+ 2
)2 3
return 
Control 
. 
MouseButton &
.& '
Left' +
;+ ,
else 
if 
( 
e 
. 
Buttons 
== 
MouseButtons *
.* +
	Alternate+ 4
)4 5
return 
Control 
. 
MouseButton &
.& '
Right' ,
;, -
else 
return 
Control 
. 
MouseButton &
.& '
Unknown' .
;. /
} 
internal   
static   
Control   
.   
Key   
Key    #
(  # $
this  $ (
KeyEventArgs  ) 5
e  6 7
)  7 8
{!! 
var## 
key## 
=## 
e## 
.## 
Key## 
;## 
return%% 
key%% 
switch%% 
{&& 	
Keys'' 
.'' 
LeftControl'' 
=>'' 
Control''  '
.''' (
Key''( +
.''+ ,
Ctrl'', 0
,''0 1
Keys(( 
.(( 
RightControl(( 
=>((  
Control((! (
.((( )
Key(() ,
.((, -
Ctrl((- 1
,((1 2
Keys)) 
.)) 
LeftAlt)) 
=>)) 
Control)) #
.))# $
Key))$ '
.))' (
Alt))( +
,))+ ,
Keys** 
.** 
RightAlt** 
=>** 
Control** $
.**$ %
Key**% (
.**( )
Alt**) ,
,**, -
Keys++ 
.++ 
	LeftShift++ 
=>++ 
Control++ %
.++% &
Key++& )
.++) *
Shift++* /
,++/ 0
Keys,, 
.,, 

RightShift,, 
=>,, 
Control,, &
.,,& '
Key,,' *
.,,* +
Shift,,+ 0
,,,0 1
_-- 
=>-- 
Control-- 
.-- 
Key-- 
.-- 
Unknown-- $
,--$ %
}.. 	
;..	 

}// 
}00 ÞN
[C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.Eto\EtoPlot.cs
	namespace

 	
	ScottPlot


 
.

 
Eto

 
;

 
public 
class 
EtoPlot 
: 
Drawable 
,  
IPlotControl! -
{ 
public 

Plot 
Plot 
{ 
get 
; 
} 
= 
new  #
(# $
)$ %
;% &
public 

	GRContext 
? 
	GRContext 
=>  "
null# '
;' (
public 

IPlotInteraction 
Interaction '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 

	IPlotMenu 
Menu 
{ 
get 
;  
set! $
;$ %
}& '
public 

float 
DisplayScale 
{ 
get  #
;# $
set% (
;( )
}* +
public 

EtoPlot 
( 
) 
{ 
DisplayScale 
= 
DetectDisplayScale )
() *
)* +
;+ ,
Interaction 
= 
new 
Interaction %
(% &
this& *
)* +
;+ ,
Menu 
= 
new 
EtoPlotMenu 
( 
this #
)# $
;$ %
this 
. 
	MouseDown 
+= 
OnMouseDown %
;% &
this 
. 
MouseUp 
+= 
	OnMouseUp !
;! "
this   
.   
	MouseMove   
+=   
OnMouseMove   %
;  % &
this!! 
.!! 

MouseWheel!! 
+=!! 
OnMouseWheel!! '
;!!' (
this"" 
."" 
KeyDown"" 
+="" 
	OnKeyDown"" !
;""! "
this## 
.## 
KeyUp## 
+=## 
OnKeyUp## 
;## 
this$$ 
.$$ 
MouseDoubleClick$$ 
+=$$  
OnDoubleClick$$! .
;$$. /
this%% 
.%% 
SizeChanged%% 
+=%% 
OnSizeChanged%% )
;%%) *
}&& 
public(( 

void(( 
Refresh(( 
((( 
)(( 
{)) 

Invalidate** 
(** 
)** 
;** 
}++ 
public-- 

void-- 
ShowContextMenu-- 
(--  
Pixel--  %
position--& .
)--. /
{.. 
Menu// 
.// 
ShowContextMenu// 
(// 
position// %
)//% &
;//& '
}00 
	protected22 
override22 
void22 
OnPaint22 #
(22# $
PaintEventArgs22$ 2
args223 7
)227 8
{33 
base44 
.44 
OnPaint44 
(44 
args44 
)44 
;44 
SKImageInfo66 
	imageInfo66 
=66 
new66  #
(66# $
(66$ %
int66% (
)66( )
Bounds66) /
.66/ 0
Width660 5
,665 6
(667 8
int668 ;
)66; <
Bounds66< B
.66B C
Height66C I
)66I J
;66J K
using88 
var88 
surface88 
=88 
	SKSurface88 %
.88% &
Create88& ,
(88, -
	imageInfo88- 6
)886 7
;887 8
if99 

(99 
surface99 
is99 
null99 
)99 
return:: 
;:: 
Plot<< 
.<< 
Render<< 
(<< 
surface<< 
.<< 
Canvas<< "
,<<" #
(<<$ %
int<<% (
)<<( )
surface<<) 0
.<<0 1
Canvas<<1 7
.<<7 8
LocalClipBounds<<8 G
.<<G H
Width<<H M
,<<M N
(<<O P
int<<P S
)<<S T
surface<<T [
.<<[ \
Canvas<<\ b
.<<b c
LocalClipBounds<<c r
.<<r s
Height<<s y
)<<y z
;<<z {
SKImage>> 
img>> 
=>> 
surface>> 
.>> 
Snapshot>> &
(>>& '
)>>' (
;>>( )
SKPixmap?? 
pixels?? 
=?? 
img?? 
.?? 
ToRasterImage?? +
(??+ ,
)??, -
.??- .

PeekPixels??. 8
(??8 9
)??9 :
;??: ;
byte@@ 
[@@ 
]@@ 
bytes@@ 
=@@ 
pixels@@ 
.@@ 
GetPixelSpan@@ *
(@@* +
)@@+ ,
.@@, -
ToArray@@- 4
(@@4 5
)@@5 6
;@@6 7
varBB 
bmpBB 
=BB 
newBB 
BitmapBB 
(BB 
(BB 
intBB !
)BB! "
BoundsBB" (
.BB( )
WidthBB) .
,BB. /
(BB0 1
intBB1 4
)BB4 5
BoundsBB5 ;
.BB; <
HeightBB< B
,BBB C
PixelFormatBBD O
.BBO P
Format32bppRgbaBBP _
)BB_ `
;BB` a
usingDD 
(DD 
varDD 
dataDD 
=DD 
bmpDD 
.DD 
LockDD "
(DD" #
)DD# $
)DD$ %
{EE 	
MarshalFF 
.FF 
CopyFF 
(FF 
bytesFF 
,FF 
$numFF  !
,FF! "
dataFF# '
.FF' (
DataFF( ,
,FF, -
bytesFF. 3
.FF3 4
LengthFF4 :
)FF: ;
;FF; <
}GG 	
argsII 
.II 
GraphicsII 
.II 
	DrawImageII 
(II  
bmpII  #
,II# $
$numII% &
,II& '
$numII( )
)II) *
;II* +
}JJ 
privateLL 
voidLL 
OnMouseDownLL 
(LL 
objectLL #
?LL# $
senderLL% +
,LL+ ,
MouseEventArgsLL- ;
eLL< =
)LL= >
{MM 
FocusNN 
(NN 
)NN 
;NN 
InteractionPP 
.PP 
	MouseDownPP 
(PP 
ePP 
.PP  
PixelPP  %
(PP% &
)PP& '
,PP' (
ePP) *
.PP* +
ToButtonPP+ 3
(PP3 4
)PP4 5
)PP5 6
;PP6 7
}QQ 
privateSS 
voidSS 
	OnMouseUpSS 
(SS 
objectSS !
?SS! "
senderSS# )
,SS) *
MouseEventArgsSS+ 9
eSS: ;
)SS; <
{TT 
InteractionUU 
.UU 
MouseUpUU 
(UU 
eUU 
.UU 
PixelUU #
(UU# $
)UU$ %
,UU% &
eUU' (
.UU( )
ToButtonUU) 1
(UU1 2
)UU2 3
)UU3 4
;UU4 5
}VV 
privateXX 
voidXX 
OnMouseMoveXX 
(XX 
objectXX #
?XX# $
senderXX% +
,XX+ ,
MouseEventArgsXX- ;
eXX< =
)XX= >
{YY 
InteractionZZ 
.ZZ 
OnMouseMoveZZ 
(ZZ  
eZZ  !
.ZZ! "
PixelZZ" '
(ZZ' (
)ZZ( )
)ZZ) *
;ZZ* +
}[[ 
private]] 
void]] 
OnMouseWheel]] 
(]] 
object]] $
?]]$ %
sender]]& ,
,]], -
MouseEventArgs]]. <
e]]= >
)]]> ?
{^^ 
Interaction__ 
.__ 
MouseWheelVertical__ &
(__& '
e__' (
.__( )
Pixel__) .
(__. /
)__/ 0
,__0 1
e__2 3
.__3 4
Delta__4 9
.__9 :
Height__: @
)__@ A
;__A B
}`` 
privatebb 
voidbb 
	OnKeyDownbb 
(bb 
objectbb !
?bb! "
senderbb# )
,bb) *
KeyEventArgsbb+ 7
ebb8 9
)bb9 :
{cc 
Interactiondd 
.dd 
KeyDowndd 
(dd 
edd 
.dd 
Keydd !
(dd! "
)dd" #
)dd# $
;dd$ %
}ee 
privategg 
voidgg 
OnKeyUpgg 
(gg 
objectgg 
?gg  
sendergg! '
,gg' (
KeyEventArgsgg) 5
egg6 7
)gg7 8
{hh 
Interactionii 
.ii 
KeyUpii 
(ii 
eii 
.ii 
Keyii 
(ii  
)ii  !
)ii! "
;ii" #
}jj 
privatell 
voidll 
OnDoubleClickll 
(ll 
objectll %
?ll% &
senderll' -
,ll- .
MouseEventArgsll/ =
ell> ?
)ll? @
{mm 
Interactionnn 
.nn 
DoubleClicknn 
(nn  
)nn  !
;nn! "
}oo 
privateqq 
voidqq 
OnSizeChangedqq 
(qq 
objectqq %
?qq% &
senderqq' -
,qq- .
	EventArgsqq/ 8
eqq9 :
)qq: ;
{rr 
Refreshss 
(ss 
)ss 
;ss 
}tt 
publicvv 

floatvv 
DetectDisplayScalevv #
(vv# $
)vv$ %
{ww 
returnzz 
$numzz 
;zz 
}{{ 
}|| 