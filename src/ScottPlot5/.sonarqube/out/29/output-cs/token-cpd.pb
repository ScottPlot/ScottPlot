í
aC:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\WpfPlotViewer.cs
	namespace 	
	ScottPlot
 
. 
WPF 
; 
public 
static 
class 
WpfPlotViewer !
{ 
public 

static 
void 
Launch 
( 
Plot "
plot# '
,' (
string) /
title0 5
=6 7
$str8 :
,: ;
int< ?
width@ E
=F G
$numH K
,K L
intM P
heightQ W
=X Y
$numZ ]
)] ^
{ 
WpfPlot 
wpfPlot 
= 
new 
( 
) 
;  
wpfPlot 
. 
Reset 
( 
plot 
) 
; 
System		 
.		 
Windows		 
.		 
Window		 
win		 !
=		" #
new		$ '
(		' (
)		( )
{

 	!
WindowStartupLocation !
=" #
System$ *
.* +
Windows+ 2
.2 3!
WindowStartupLocation3 H
.H I
CenterScreenI U
,U V
Width 
= 
width 
, 
Height 
= 
height 
, 
Title 
= 
title 
, 
Content 
= 
wpfPlot 
, 
} 	
;	 

win 
. 

ShowDialog 
( 
) 
; 
} 
} ¢Y
_C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\WpfPlotMenu.cs
	namespace

 	
	ScottPlot


 
.

 
WPF

 
;

 
public 
class 
WpfPlotMenu 
: 
	IPlotMenu $
{ 
public 

string $
DefaultSaveImageFilename *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
$str; E
;E F
public 

List 
< 
ContextMenuItem 
>  
ContextMenuItems! 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
=@ A
newB E
(E F
)F G
;G H
readonly 
WpfPlotBase 
ThisControl $
;$ %
public 

WpfPlotMenu 
( 
WpfPlotBase "
control# *
)* +
{ 
ThisControl 
= 
control 
; 
Reset 
( 
) 
; 
} 
public 

ContextMenuItem 
[ 
] &
GetDefaultContextMenuItems 7
(7 8
)8 9
{ 
ContextMenuItem 
	saveImage !
=" #
new$ '
(' (
)( )
{ 	
Label 
= 
$str  
,  !
OnInvoke 
= 
OpenSaveImageDialog *
} 	
;	 

ContextMenuItem   
	copyImage   !
=  " #
new  $ '
(  ' (
)  ( )
{!! 	
Label"" 
="" 
$str"" '
,""' (
OnInvoke## 
=##  
CopyImageToClipboard## +
}$$ 	
;$$	 

return&& 
new&& 
ContextMenuItem&& "
[&&" #
]&&# $
{&&% &
	saveImage&&' 0
,&&0 1
	copyImage&&2 ;
}&&< =
;&&= >
}'' 
public)) 

ContextMenu)) 
GetContextMenu)) %
())% &
)))& '
{** 
ContextMenu++ 
menu++ 
=++ 
new++ 
(++ 
)++  
;++  !
foreach-- 
(-- 
ContextMenuItem--  
curr--! %
in--& (
ContextMenuItems--) 9
)--9 :
{.. 	
if// 
(// 
curr// 
.// 
IsSeparator//  
)//  !
{00 
menu11 
.11 
Items11 
.11 
Add11 
(11 
new11 "
	Separator11# ,
(11, -
)11- .
)11. /
;11/ 0
}22 
else33 
{44 
MenuItem55 
menuItem55 !
=55" #
new55$ '
(55' (
)55( )
{55* +
Header55, 2
=553 4
curr555 9
.559 :
Label55: ?
}55@ A
;55A B
menuItem66 
.66 
Click66 
+=66 !
(66" #
s66# $
,66$ %
e66& '
)66' (
=>66) +
curr66, 0
.660 1
OnInvoke661 9
(669 :
ThisControl66: E
)66E F
;66F G
menu77 
.77 
Items77 
.77 
Add77 
(77 
menuItem77 '
)77' (
;77( )
}88 
}99 	
return;; 
menu;; 
;;; 
}<< 
public>> 

void>> 
ShowContextMenu>> 
(>>  
Pixel>>  %
position>>& .
)>>. /
{?? 
var@@ 
menu@@ 
=@@ 
GetContextMenu@@ !
(@@! "
)@@" #
;@@# $
menuAA 
.AA 
PlacementTargetAA 
=AA 
ThisControlAA *
;AA* +
menuBB 
.BB 
	PlacementBB 
=BB 
SystemBB 
.BB  
WindowsBB  '
.BB' (
ControlsBB( 0
.BB0 1

PrimitivesBB1 ;
.BB; <
PlacementModeBB< I
.BBI J

MousePointBBJ T
;BBT U
menuCC 
.CC 
IsOpenCC 
=CC 
trueCC 
;CC 
}DD 
publicFF 

voidFF 
OpenSaveImageDialogFF #
(FF# $
IPlotControlFF$ 0
plotControlFF1 <
)FF< =
{GG 
SaveFileDialogHH 
dialogHH 
=HH 
newHH  #
(HH# $
)HH$ %
{II 	
FileNameJJ 
=JJ $
DefaultSaveImageFilenameJJ /
,JJ/ 0
FilterKK 
=KK 
$strKK .
+KK/ 0
$strLL ?
+LL@ A
$strMM /
+MM0 1
$strNN 2
+NN3 4
$strOO /
+OO0 1
$strPP +
}QQ 	
;QQ	 

ifSS 

(SS 
dialogSS 
.SS 

ShowDialogSS 
(SS 
)SS 
isSS  "
trueSS# '
)SS' (
{TT 	
ifUU 
(UU 
stringUU 
.UU 
IsNullOrEmptyUU $
(UU$ %
dialogUU% +
.UU+ ,
FileNameUU, 4
)UU4 5
)UU5 6
returnVV 
;VV 
ImageFormatXX 
formatXX 
;XX 
tryZZ 
{[[ 
format\\ 
=\\ 
ImageFormatLookup\\ *
.\\* +
FromFilePath\\+ 7
(\\7 8
dialog\\8 >
.\\> ?
FileName\\? G
)\\G H
;\\H I
}]] 
catch^^ 
(^^ 
ArgumentException^^ $
)^^$ %
{__ 

MessageBox`` 
.`` 
Show`` 
(``  
$str``  ?
,``? @
$str``A H
,``H I
MessageBoxButton``J Z
.``Z [
OK``[ ]
,``] ^
MessageBoxImage``_ n
.``n o
Error``o t
)``t u
;``u v
returnaa 
;aa 
}bb 
trycc 
{dd 
	PixelSizeee 
lastRenderSizeee (
=ee) *
plotControlee+ 6
.ee6 7
Plotee7 ;
.ee; <
RenderManageree< I
.eeI J

LastRendereeJ T
.eeT U

FigureRecteeU _
.ee_ `
Sizeee` d
;eed e
plotControlff 
.ff 
Plotff  
.ff  !
Saveff! %
(ff% &
dialogff& ,
.ff, -
FileNameff- 5
,ff5 6
(ff7 8
intff8 ;
)ff; <
lastRenderSizeff< J
.ffJ K
WidthffK P
,ffP Q
(ffR S
intffS V
)ffV W
lastRenderSizeffW e
.ffe f
Heightfff l
,ffl m
formatffn t
)fft u
;ffu v
}gg 
catchhh 
(hh 
	Exceptionhh 
)hh 
{ii 

MessageBoxjj 
.jj 
Showjj 
(jj  
$strjj  3
,jj3 4
$strjj5 <
,jj< =
MessageBoxButtonjj> N
.jjN O
OKjjO Q
,jjQ R
MessageBoxImagejjS b
.jjb c
Errorjjc h
)jjh i
;jji j
returnkk 
;kk 
}ll 
}mm 	
}nn 
publicpp 

staticpp 
voidpp  
CopyImageToClipboardpp +
(pp+ ,
IPlotControlpp, 8
plotControlpp9 D
)ppD E
{qq 
	PixelSizerr 
lastRenderSizerr  
=rr! "
plotControlrr# .
.rr. /
Plotrr/ 3
.rr3 4
RenderManagerrr4 A
.rrA B

LastRenderrrB L
.rrL M

FigureRectrrM W
.rrW X
SizerrX \
;rr\ ]
Imagess 
bmpss 
=ss 
plotControlss 
.ss  
Plotss  $
.ss$ %
GetImagess% -
(ss- .
(ss. /
intss/ 2
)ss2 3
lastRenderSizess3 A
.ssA B
WidthssB G
,ssG H
(ssI J
intssJ M
)ssM N
lastRenderSizessN \
.ss\ ]
Heightss] c
)ssc d
;ssd e
bytett 
[tt 
]tt 
bmpBytestt 
=tt 
bmptt 
.tt 
GetImageBytestt +
(tt+ ,
)tt, -
;tt- .
usingvv 
MemoryStreamvv 
msvv 
=vv 
newvv  #
(vv# $
)vv$ %
;vv% &
msww 

.ww
 
Writeww 
(ww 
bmpBytesww 
,ww 
$numww 
,ww 
bmpBytesww &
.ww& '
Lengthww' -
)ww- .
;ww. /
BitmapImagexx 
bmpImagexx 
=xx 
newxx "
(xx" #
)xx# $
;xx$ %
bmpImageyy 
.yy 
	BeginInityy 
(yy 
)yy 
;yy 
bmpImagezz 
.zz 
StreamSourcezz 
=zz 
mszz  "
;zz" #
bmpImage{{ 
.{{ 
EndInit{{ 
({{ 
){{ 
;{{ 
	Clipboard|| 
.|| 
SetImage|| 
(|| 
bmpImage|| #
)||# $
;||$ %
}}} 
public 

void 
Reset 
( 
) 
{
 
Clear
 
(
 
)
 
;
 
ContextMenuItems
 
.
 
AddRange
 !
(
! "(
GetDefaultContextMenuItems
" <
(
< =
)
= >
)
> ?
;
? @
}
 
public
 

void
 
Clear
 
(
 
)
 
{
 
ContextMenuItems
 
.
 
Clear
 
(
 
)
  
;
  !
}
 
public
 

void
 
Add
 
(
 
string
 
Label
  
,
  !
Action
" (
<
( )
IPlotControl
) 5
>
5 6
action
7 =
)
= >
{
 
ContextMenuItems
 
.
 
Add
 
(
 
new
  
ContextMenuItem
! 0
(
0 1
)
1 2
{
3 4
Label
5 :
=
; <
Label
= B
,
B C
OnInvoke
D L
=
M N
action
O U
}
V W
)
W X
;
X Y
}
 
public
 

void
 
AddSeparator
 
(
 
)
 
{
 
ContextMenuItems
 
.
 
Add
 
(
 
new
  
ContextMenuItem
! 0
(
0 1
)
1 2
{
3 4
IsSeparator
5 @
=
A B
true
C G
}
H I
)
I J
;
J K
}
 
} º*
]C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\WpfPlotGL.cs
	namespace 	
	ScottPlot
 
. 
WPF 
; 
[ 
System 
. 
ComponentModel 
. 
ToolboxItem "
(" #
false# (
)( )
]) *
[ 
System 
. 
ComponentModel 
. 
DesignTimeVisible (
(( )
true) -
)- .
]. /
[ 
TemplatePart 
( 
Name 
= 
PART_SKElement #
,# $
Type% )
=* +
typeof, 2
(2 3
	SkiaSharp3 <
.< =
Views= B
.B C
WPFC F
.F G
SKGLElementG R
)R S
)S T
]T U
public		 
class		 
	WpfPlotGL		 
:		 
WpfPlotBase		 $
{

 
private 
const 
string 
PART_SKElement '
=( )
$str* :
;: ;
private 
	SkiaSharp 
. 
Views 
. 
WPF 
.  
SKGLElement  +
?+ ,
	SKElement- 6
;6 7
public 

override 
	GRContext 
	GRContext '
=>( *
	SKElement+ 4
?4 5
.5 6
	GRContext6 ?
??@ B
	GRContextC L
.L M
CreateGlM U
(U V
)V W
;W X
static 

	WpfPlotGL 
( 
) 
{ #
DefaultStyleKeyProperty 
.  
OverrideMetadata  0
(0 1
forType 
: 
typeof 
( 
	WpfPlotGL %
)% &
,& '
typeMetadata 
: 
new %
FrameworkPropertyMetadata 7
(7 8
typeof8 >
(> ?
	WpfPlotGL? H
)H I
)I J
)J K
;K L
} 
public 

override 
void 
OnApplyTemplate (
(( )
)) *
{ 
	SKElement 
= 
Template 
. 
FindName %
(% &
PART_SKElement& 4
,4 5
this6 :
): ;
as< >
	SkiaSharp? H
.H I
ViewsI N
.N O
WPFO R
.R S
SKGLElementS ^
;^ _
if 

( 
	SKElement 
== 
null 
) 
return 
; 
	SKElement   
.   
PaintSurface   
+=   !
(  " #
sender  # )
,  ) *
e  + ,
)  , -
=>  . 0
{!! 	
float"" 
width"" 
="" 
("" 
float""  
)""  !
e""! "
.""" #
Surface""# *
.""* +
Canvas""+ 1
.""1 2
LocalClipBounds""2 A
.""A B
Width""B G
;""G H
float## 
height## 
=## 
(## 
float## !
)##! "
e##" #
.### $
Surface##$ +
.##+ ,
Canvas##, 2
.##2 3
LocalClipBounds##3 B
.##B C
Height##C I
;##I J
	PixelRect$$ 
rect$$ 
=$$ 
new$$  
($$  !
$num$$! "
,$$" #
width$$$ )
,$$) *
height$$+ 1
,$$1 2
$num$$3 4
)$$4 5
;$$5 6
Plot%% 
.%% 
Render%% 
(%% 
e%% 
.%% 
Surface%% !
.%%! "
Canvas%%" (
,%%( )
rect%%* .
)%%. /
;%%/ 0
}&& 	
;&&	 

	SKElement(( 
.(( 
	MouseDown(( 
+=(( 
SKElement_MouseDown(( 2
;((2 3
	SKElement)) 
.)) 
MouseUp)) 
+=)) 
SKElement_MouseUp)) .
;)). /
	SKElement** 
.** 
	MouseMove** 
+=** 
SKElement_MouseMove** 2
;**2 3
	SKElement++ 
.++ 

MouseWheel++ 
+=++  
SKElement_MouseWheel++  4
;++4 5
	SKElement,, 
.,, 
KeyDown,, 
+=,, 
SKElement_KeyDown,, .
;,,. /
	SKElement-- 
.-- 
KeyUp-- 
+=-- 
SKElement_KeyUp-- *
;--* +
}.. 
public00 

override00 
void00 
Refresh00  
(00  !
)00! "
{11 
if22 

(22 
!22 
CheckAccess22 
(22 
)22 
)22 
{33 	

Dispatcher44 
.44 
BeginInvoke44 "
(44" #
Refresh44# *
)44* +
;44+ ,
return55 
;55 
}66 	
	SKElement88 
?88 
.88 
InvalidateVisual88 #
(88# $
)88$ %
;88% &
}99 
};; 7
eC:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\WpfPlotExtensions.cs
	namespace		 	
	ScottPlot		
 
.		 
WPF		 
;		 
internal 
static	 
class 
WpfPlotExtensions '
{ 
internal 
static 
Pixel 
Pixel 
(  
this  $
MouseEventArgs% 3
e4 5
,5 6
WpfPlotBase7 B
plotC G
)G H
{ 
DpiScale 
dpiScale 
= 
VisualTreeHelper ,
., -
GetDpi- 3
(3 4
plot4 8
)8 9
;9 :
double 
x 
= 
e 
. 
GetPosition  
(  !
plot! %
)% &
.& '
X' (
*) *
dpiScale+ 3
.3 4
	DpiScaleX4 =
;= >
double 
y 
= 
e 
. 
GetPosition  
(  !
plot! %
)% &
.& '
Y' (
*) *
dpiScale+ 3
.3 4
	DpiScaleY4 =
;= >
return 
new 
Pixel 
( 
( 
float 
)  
x  !
,! "
(# $
float$ )
)) *
y* +
)+ ,
;, -
} 
internal 
static 
Control 
. 
MouseButton '
ToButton( 0
(0 1
this1 5 
MouseButtonEventArgs6 J
eK L
)L M
{ 
if 

( 
e 
. 
ChangedButton 
== 
System %
.% &
Windows& -
.- .
Input. 3
.3 4
MouseButton4 ?
.? @
Middle@ F
)F G
return 
Control 
. 
MouseButton &
.& '
Middle' -
;- .
else 
if 
( 
e 
. 
ChangedButton  
==! #
System$ *
.* +
Windows+ 2
.2 3
Input3 8
.8 9
MouseButton9 D
.D E
LeftE I
)I J
return 
Control 
. 
MouseButton &
.& '
Left' +
;+ ,
else 
if 
( 
e 
. 
ChangedButton  
==! #
System$ *
.* +
Windows+ 2
.2 3
Input3 8
.8 9
MouseButton9 D
.D E
RightE J
)J K
return 
Control 
. 
MouseButton &
.& '
Right' ,
;, -
else 
return 
Control 
. 
MouseButton &
.& '
Unknown' .
;. /
} 
internal!! 
static!! 
Control!! 
.!! 
Key!! 
Key!!  #
(!!# $
this!!$ (
KeyEventArgs!!) 5
e!!6 7
)!!7 8
{"" 
var$$ 
key$$ 
=$$ 
e$$ 
.$$ 
Key$$ 
==$$ 
System$$ !
.$$! "
Windows$$" )
.$$) *
Input$$* /
.$$/ 0
Key$$0 3
.$$3 4
System$$4 :
?$$; <
e$$= >
.$$> ?
	SystemKey$$? H
:$$I J
e$$K L
.$$L M
Key$$M P
;$$P Q
return&& 
key&& 
switch&& 
{'' 	
System(( 
.(( 
Windows(( 
.(( 
Input((  
.((  !
Key((! $
.(($ %
LeftCtrl((% -
=>((. 0
Control((1 8
.((8 9
Key((9 <
.((< =
Ctrl((= A
,((A B
System)) 
.)) 
Windows)) 
.)) 
Input))  
.))  !
Key))! $
.))$ %
	RightCtrl))% .
=>))/ 1
Control))2 9
.))9 :
Key)): =
.))= >
Ctrl))> B
,))B C
System** 
.** 
Windows** 
.** 
Input**  
.**  !
Key**! $
.**$ %
LeftAlt**% ,
=>**- /
Control**0 7
.**7 8
Key**8 ;
.**; <
Alt**< ?
,**? @
System++ 
.++ 
Windows++ 
.++ 
Input++  
.++  !
Key++! $
.++$ %
RightAlt++% -
=>++. 0
Control++1 8
.++8 9
Key++9 <
.++< =
Alt++= @
,++@ A
System,, 
.,, 
Windows,, 
.,, 
Input,,  
.,,  !
Key,,! $
.,,$ %
	LeftShift,,% .
=>,,/ 1
Control,,2 9
.,,9 :
Key,,: =
.,,= >
Shift,,> C
,,,C D
System-- 
.-- 
Windows-- 
.-- 
Input--  
.--  !
Key--! $
.--$ %

RightShift--% /
=>--0 2
Control--3 :
.--: ;
Key--; >
.--> ?
Shift--? D
,--D E
_.. 
=>.. 
Control.. 
... 
Key.. 
... 
Unknown.. $
,..$ %
}// 	
;//	 

}00 
internal22 
static22 
BitmapImage22 
GetBitmapImage22  .
(22. /
this22/ 3
Plot224 8
plot229 =
,22= >
int22? B
width22C H
,22H I
int22J M
height22N T
)22T U
{33 
byte44 
[44 
]44 
bytes44 
=44 
plot44 
.44 
GetImageBytes44 )
(44) *
width44* /
,44/ 0
height441 7
)447 8
;448 9
using55 
MemoryStream55 
ms55 
=55 
new55  #
(55# $
bytes55$ )
)55) *
;55* +
BitmapImage77 
bmp77 
=77 
new77 
(77 
)77 
;77  
bmp88 
.88 
	BeginInit88 
(88 
)88 
;88 
bmp99 
.99 
StreamSource99 
=99 
ms99 
;99 
bmp:: 
.:: 
EndInit:: 
(:: 
):: 
;:: 
bmp;; 
.;; 
Freeze;; 
(;; 
);; 
;;; 
return== 
bmp== 
;== 
}>> 
}?? ñF
_C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\WpfPlotBase.cs
	namespace

 	
	ScottPlot


 
.

 
WPF

 
{ 
public 

abstract 
class 
WpfPlotBase %
:& '
System( .
.. /
Windows/ 6
.6 7
Controls7 ?
.? @
Control@ G
,G H
IPlotControlI U
{ 
public 
abstract 
	GRContext !
	GRContext" +
{, -
get. 1
;1 2
}3 4
public 
abstract 
void 
Refresh $
($ %
)% &
;& '
public 
Plot 
Plot 
{ 
get 
; 
internal  (
set) ,
;, -
}. /
public 
IPlotInteraction 
Interaction  +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
float 
DisplayScale !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
	IPlotMenu 
Menu 
{ 
get  #
;# $
set% (
;( )
}* +
static 
WpfPlotBase 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
forType 
: 
typeof 
(  
WpfPlotBase  +
)+ ,
,, -
typeMetadata 
: 
new !%
FrameworkPropertyMetadata" ;
(; <
typeof< B
(B C
WpfPlotBaseC N
)N O
)O P
)P Q
;Q R
} 	
public 
WpfPlotBase 
( 
) 
{ 	
DisplayScale 
= 
DetectDisplayScale -
(- .
). /
;/ 0
Interaction   
=   
new   
Interaction   )
(  ) *
this  * .
)  . /
;  / 0
Menu!! 
=!! 
new!! 
WpfPlotMenu!! "
(!!" #
this!!# '
)!!' (
;!!( )
Plot"" 
="" 
Reset"" 
("" 
)"" 
;"" 
	Focusable## 
=## 
true## 
;## 
}$$ 	
	protected&& 
override&& 
void&& 
	OnKeyDown&&  )
(&&) *
KeyEventArgs&&* 6
e&&7 8
)&&8 9
{'' 	
base(( 
.(( 
	OnKeyDown(( 
((( 
e(( 
)(( 
;(( 
Interaction)) 
.)) 
KeyDown)) 
())  
e))  !
.))! "
Key))" %
())% &
)))& '
)))' (
;))( )
}** 	
	protected,, 
override,, 
void,, 
OnKeyUp,,  '
(,,' (
KeyEventArgs,,( 4
e,,5 6
),,6 7
{-- 	
base.. 
... 
OnKeyUp.. 
(.. 
e.. 
).. 
;.. 
Interaction// 
.// 
KeyUp// 
(// 
e// 
.//  
Key//  #
(//# $
)//$ %
)//% &
;//& '
}00 	
public22 
Plot22 
Reset22 
(22 
)22 
{33 	
return44 
Reset44 
(44 
new44 
Plot44 !
(44! "
)44" #
)44# $
;44$ %
}55 	
public77 
Plot77 
Reset77 
(77 
Plot77 
newPlot77 &
)77& '
{88 	
Plot99 
oldPlot99 
=99 
Plot99 
;99  
Plot:: 
=:: 
newPlot:: 
;:: 
oldPlot;; 
?;; 
.;; 
Dispose;; 
(;; 
);; 
;;; 
return<< 
newPlot<< 
;<< 
}== 	
public?? 
void?? 
ShowContextMenu?? #
(??# $
Pixel??$ )
position??* 2
)??2 3
{@@ 	
MenuAA 
.AA 
ShowContextMenuAA  
(AA  !
positionAA! )
)AA) *
;AA* +
}BB 	
internalDD 
voidDD 
SKElement_MouseDownDD )
(DD) *
objectDD* 0
?DD0 1
senderDD2 8
,DD8 9
SystemDD: @
.DD@ A
WindowsDDA H
.DDH I
InputDDI N
.DDN O 
MouseButtonEventArgsDDO c
eDDd e
)DDe f
{EE 	
KeyboardFF 
.FF 
FocusFF 
(FF 
thisFF 
)FF  
;FF  !
InteractionHH 
.HH 
	MouseDownHH !
(HH! "
eHH" #
.HH# $
PixelHH$ )
(HH) *
thisHH* .
)HH. /
,HH/ 0
eHH1 2
.HH2 3
ToButtonHH3 ;
(HH; <
)HH< =
)HH= >
;HH> ?
(JJ 
senderJJ 
asJJ 
	UIElementJJ  
)JJ  !
?JJ! "
.JJ" #
CaptureMouseJJ# /
(JJ/ 0
)JJ0 1
;JJ1 2
ifLL 
(LL 
eLL 
.LL 

ClickCountLL 
==LL 
$numLL  !
)LL! "
{MM 
InteractionNN 
.NN 
DoubleClickNN '
(NN' (
)NN( )
;NN) *
}OO 
}PP 	
internalRR 
voidRR 
SKElement_MouseUpRR '
(RR' (
objectRR( .
?RR. /
senderRR0 6
,RR6 7
SystemRR8 >
.RR> ?
WindowsRR? F
.RRF G
InputRRG L
.RRL M 
MouseButtonEventArgsRRM a
eRRb c
)RRc d
{SS 	
InteractionTT 
.TT 
MouseUpTT 
(TT  
eTT  !
.TT! "
PixelTT" '
(TT' (
thisTT( ,
)TT, -
,TT- .
eTT/ 0
.TT0 1
ToButtonTT1 9
(TT9 :
)TT: ;
)TT; <
;TT< =
(UU 
senderUU 
asUU 
	UIElementUU  
)UU  !
?UU! "
.UU" #
ReleaseMouseCaptureUU# 6
(UU6 7
)UU7 8
;UU8 9
}VV 	
internalXX 
voidXX 
SKElement_MouseMoveXX )
(XX) *
objectXX* 0
?XX0 1
senderXX2 8
,XX8 9
MouseEventArgsXX: H
eXXI J
)XXJ K
{YY 	
InteractionZZ 
.ZZ 
OnMouseMoveZZ #
(ZZ# $
eZZ$ %
.ZZ% &
PixelZZ& +
(ZZ+ ,
thisZZ, 0
)ZZ0 1
)ZZ1 2
;ZZ2 3
}[[ 	
internal]] 
void]]  
SKElement_MouseWheel]] *
(]]* +
object]]+ 1
?]]1 2
sender]]3 9
,]]9 :
System]]; A
.]]A B
Windows]]B I
.]]I J
Input]]J O
.]]O P
MouseWheelEventArgs]]P c
e]]d e
)]]e f
{^^ 	
Interaction__ 
.__ 
MouseWheelVertical__ *
(__* +
e__+ ,
.__, -
Pixel__- 2
(__2 3
this__3 7
)__7 8
,__8 9
e__: ;
.__; <
Delta__< A
)__A B
;__B C
}`` 	
internalbb 
voidbb 
SKElement_KeyDownbb '
(bb' (
objectbb( .
?bb. /
senderbb0 6
,bb6 7
KeyEventArgsbb8 D
ebbE F
)bbF G
{cc 	
Interactiondd 
.dd 
KeyDowndd 
(dd  
edd  !
.dd! "
Keydd" %
(dd% &
)dd& '
)dd' (
;dd( )
}ee 	
internalgg 
voidgg 
SKElement_KeyUpgg %
(gg% &
objectgg& ,
?gg, -
sendergg. 4
,gg4 5
KeyEventArgsgg6 B
eggC D
)ggD E
{hh 	
Interactionii 
.ii 
KeyUpii 
(ii 
eii 
.ii  
Keyii  #
(ii# $
)ii$ %
)ii% &
;ii& '
}jj 	
publicll 
floatll 
DetectDisplayScalell '
(ll' (
)ll( )
{mm 	
returnnn 
(nn 
floatnn 
)nn 
VisualTreeHelpernn *
.nn* +
GetDpinn+ 1
(nn1 2
thisnn2 6
)nn6 7
.nn7 8
	DpiScaleXnn8 A
;nnA B
}oo 	
}pp 
}qq «)
[C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\WpfPlot.cs
	namespace 	
	ScottPlot
 
. 
WPF 
{ 
[ 
System 
. 
ComponentModel 
. 
ToolboxItem &
(& '
true' +
)+ ,
], -
[ 
System 
. 
ComponentModel 
. 
DesignTimeVisible ,
(, -
true- 1
)1 2
]2 3
[ 
TemplatePart 
( 
Name 
= 
PART_SKElement '
,' (
Type) -
=. /
typeof0 6
(6 7
	SkiaSharp7 @
.@ A
ViewsA F
.F G
WPFG J
.J K
	SKElementK T
)T U
)U V
]V W
public		 

class		 
WpfPlot		 
:		 
WpfPlotBase		 &
{

 
private 
const 
string 
PART_SKElement +
=, -
$str. >
;> ?
private 
	SkiaSharp 
. 
Views 
.  
WPF  #
.# $
	SKElement$ -
?- .
	SKElement/ 8
;8 9
public 
override 
	GRContext !
	GRContext" +
=>, .
null/ 3
!3 4
;4 5
static 
WpfPlot 
( 
) 
{ 	#
DefaultStyleKeyProperty #
.# $
OverrideMetadata$ 4
(4 5
forType 
: 
typeof 
(  
WpfPlot  '
)' (
,( )
typeMetadata 
: 
new !%
FrameworkPropertyMetadata" ;
(; <
typeof< B
(B C
WpfPlotC J
)J K
)K L
)L M
;M N
} 	
public 
override 
void 
OnApplyTemplate ,
(, -
)- .
{ 	
	SKElement 
= 
Template  
.  !
FindName! )
() *
PART_SKElement* 8
,8 9
this: >
)> ?
as@ B
	SkiaSharpC L
.L M
ViewsM R
.R S
WPFS V
.V W
	SKElementW `
;` a
if 
( 
	SKElement 
== 
null !
)! "
return 
; 
	SKElement 
. 
PaintSurface "
+=# %
(& '
sender' -
,- .
e/ 0
)0 1
=>2 4
{   
float!! 
width!! 
=!! 
(!! 
float!! $
)!!$ %
e!!% &
.!!& '
Surface!!' .
.!!. /
Canvas!!/ 5
.!!5 6
LocalClipBounds!!6 E
.!!E F
Width!!F K
;!!K L
float"" 
height"" 
="" 
(""  
float""  %
)""% &
e""& '
.""' (
Surface""( /
.""/ 0
Canvas""0 6
.""6 7
LocalClipBounds""7 F
.""F G
Height""G M
;""M N
	PixelRect## 
rect## 
=##  
new##! $
(##$ %
$num##% &
,##& '
width##( -
,##- .
height##/ 5
,##5 6
$num##7 8
)##8 9
;##9 :
Plot$$ 
.$$ 
Render$$ 
($$ 
e$$ 
.$$ 
Surface$$ %
.$$% &
Canvas$$& ,
,$$, -
rect$$. 2
)$$2 3
;$$3 4
}%% 
;%% 
	SKElement'' 
.'' 
	MouseDown'' 
+=''  "
SKElement_MouseDown''# 6
;''6 7
	SKElement(( 
.(( 
MouseUp(( 
+=((  
SKElement_MouseUp((! 2
;((2 3
	SKElement)) 
.)) 
	MouseMove)) 
+=))  "
SKElement_MouseMove))# 6
;))6 7
	SKElement** 
.** 

MouseWheel**  
+=**! # 
SKElement_MouseWheel**$ 8
;**8 9
	SKElement++ 
.++ 
KeyDown++ 
+=++  
SKElement_KeyDown++! 2
;++2 3
	SKElement,, 
.,, 
KeyUp,, 
+=,, 
SKElement_KeyUp,, .
;,,. /
}-- 	
public// 
override// 
void// 
Refresh// $
(//$ %
)//% &
{00 	
if11 
(11 
!11 
CheckAccess11 
(11 
)11 
)11 
{22 

Dispatcher33 
.33 
BeginInvoke33 &
(33& '
Refresh33' .
)33. /
;33/ 0
return44 
;44 
}55 
	SKElement77 
?77 
.77 
InvalidateVisual77 '
(77' (
)77( )
;77) *
}88 	
}99 
}:: °
_C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\SKGLElement.cs
	namespace 	
	SkiaSharp
 
. 
Views 
. 
WPF 
{ 
[ 
DefaultEvent 
( 
$str  
)  !
]! "
[ 
DefaultProperty 
( 
$str 
) 
] 
public 

class 
SKGLElement 
: 
GLWpfControl +
,+ ,
IDisposable- 8
{ 
private 
const 
SKColorType !
	colorType" +
=, -
SKColorType. 9
.9 :
Rgba8888: B
;B C
private 
const 
GRSurfaceOrigin %
surfaceOrigin& 3
=4 5
GRSurfaceOrigin6 E
.E F

BottomLeftF P
;P Q
private 
bool 

designMode 
;  
private 
	GRContext 
	grContext #
;# $
private 
GRGlFramebufferInfo #
glInfo$ *
;* +
private !
GRBackendRenderTarget %
renderTarget& 2
;2 3
private 
	SKSurface 
surface !
;! "
private 
SKCanvas 
canvas 
;  
private   
SKSizeI   
lastSize    
;    !
private!! %
SKGLElementWindowListener!! )
listener!!* 2
;!!2 3
public## 
SKGLElement## 
(## 
)## 
:$$ 
base$$ 
($$ 
)$$ 
{%% 	

Initialize&& 
(&& 
)&& 
;&& 
}'' 	
private)) 
void)) 

Initialize)) 
())  
)))  !
{** 	

designMode++ 
=++ 
DesignerProperties++ +
.+++ ,
GetIsInDesignMode++, =
(++= >
this++> B
)++B C
;++C D
var00 
settings00 
=00 
new00  
GLWpfControlSettings00 3
(003 4
)004 5
{006 7
MajorVersion008 D
=00E F
$num00G H
,00H I
MinorVersion00J V
=00W X
$num00Y Z
,00Z [
RenderContinuously00\ n
=00o p
false00q v
}00w x
;00x y
this22 
.22 
Render22 
+=22 
OnPaint22 "
;22" #
this44 
.44 
Loaded44 
+=44 
(44 
s44 
,44 
e44  
)44  !
=>44" $
{55 %
SKGLElementWindowListener66 )
listener66* 2
=663 4
new665 8%
SKGLElementWindowListener669 R
(66R S
this66S W
)66W X
;66X Y
this77 
.77 
listener77 
=77 
listener77  (
;77( )
}88 
;88 
Start:: 
(:: 
settings:: 
):: 
;:: 
};; 	
private>> 
class>> %
SKGLElementWindowListener>> /
:>>0 1
IDisposable>>2 =
{?? 	
private@@ 
WeakReference@@ !
<@@! "
SKGLElement@@" -
>@@- .
	toDestroy@@/ 8
;@@8 9
privateAA 
WeakReferenceAA !
<AA! "
WindowAA" (
>AA( )
	theWindowAA* 3
;AA3 4
publicBB %
SKGLElementWindowListenerBB ,
(BB, -
SKGLElementBB- 8
	toDestroyBB9 B
)BBB C
{CC 
thisDD 
.DD 
	toDestroyDD 
=DD  
newDD! $
WeakReferenceDD% 2
<DD2 3
SKGLElementDD3 >
>DD> ?
(DD? @
	toDestroyDD@ I
)DDI J
;DDJ K
varEE 
windowEE 
=EE 
SystemEE #
.EE# $
WindowsEE$ +
.EE+ ,
WindowEE, 2
.EE2 3
	GetWindowEE3 <
(EE< =
	toDestroyEE= F
)EEF G
;EEG H
ifFF 
(FF 
windowFF 
!=FF 
nullFF "
)FF" #
{GG 
	theWindowHH 
=HH 
newHH  #
WeakReferenceHH$ 1
<HH1 2
WindowHH2 8
>HH8 9
(HH9 :
windowHH: @
)HH@ A
;HHA B
windowII 
.II 
ClosingII "
+=II# %
Window_ClosingII& 4
;II4 5
}JJ 
}KK 
privateMM 
voidMM 
Window_ClosingMM '
(MM' (
objectMM( .
senderMM/ 5
,MM5 6
CancelEventArgsMM7 F
eMMG H
)MMH I
{NN 
SKGLElementOO 
targetOO "
=OO# $
nullOO% )
;OO) *
ifPP 
(PP 
	toDestroyPP 
.PP 
TryGetTargetPP *
(PP* +
outPP+ .
targetPP/ 5
)PP5 6
)PP6 7
{QQ 
ifRR 
(RR 
targetRR 
!=RR !
nullRR" &
)RR& '
{SS 
targetTT 
.TT 
DisposeTT &
(TT& '
)TT' (
;TT( )
}UU 
}VV 
}XX 
privateZZ 
boolZZ 
disposedZZ !
=ZZ" #
falseZZ$ )
;ZZ) *
	protected]] 
virtual]] 
void]] "
Dispose]]# *
(]]* +
bool]]+ /
	disposing]]0 9
)]]9 :
{^^ 
if__ 
(__ 
disposed__ 
)__ 
{`` 
returnaa 
;aa 
}bb 
Windowdd 
windowdd 
;dd 
ifee 
(ee 
	theWindowee 
!=ee  
nullee! %
&&ee& (
	theWindowee) 2
.ee2 3
TryGetTargetee3 ?
(ee? @
outee@ C
windoweeD J
)eeJ K
)eeK L
{ff 
ifgg 
(gg 
windowgg 
!=gg !
nullgg" &
)gg& '
{hh 
windowii 
.ii 
Closingii &
-=ii' )
Window_Closingii* 8
;ii8 9
}jj 
}kk 
	theWindowll 
=ll 
nullll  
;ll  !
disposednn 
=nn 
truenn 
;nn  
}oo 
publicqq 
voidqq 
Disposeqq 
(qq  
)qq  !
{rr 
Disposess 
(ss 
truess 
)ss 
;ss 
}tt 
}uu 	
publicxx 
SKSizexx 

CanvasSizexx  
=>xx! #
lastSizexx$ ,
;xx, -
publiczz 
	GRContextzz 
	GRContextzz "
=>zz# %
	grContextzz& /
;zz/ 0
[|| 	
Category||	 
(|| 
$str|| 
)|| 
]||  
public}} 
event}} 
EventHandler}} !
<}}! "%
SKPaintGLSurfaceEventArgs}}" ;
>}}; <
PaintSurface}}= I
;}}I J
private 
SKSizeI 
GetSize 
(  
)  !
{
 	
var
 
currentWidth
 
=
 
ActualWidth
 *
;
* +
var
 
currentHeight
 
=
 
ActualHeight
  ,
;
, -
if
 
(
 
currentWidth
 
<
 
$num
  
||
! #
currentHeight
 
<
 
$num
  !
)
! "
{
 
currentWidth
 
=
 
$num
  
;
  !
currentHeight
 
=
 
$num
  !
;
! "
}
  
PresentationSource
 
source
 %
=
& ' 
PresentationSource
( :
.
: ;

FromVisual
; E
(
E F
this
F J
)
J K
;
K L
double
 
dpiX
 
=
 
$num
 
;
 
double
 
dpiY
 
=
 
$num
 
;
 
if
 
(
 
source
 
!=
 
null
 
)
 
{
 
dpiX
 
=
 
source
 
.
 
CompositionTarget
 /
.
/ 0
TransformToDevice
0 A
.
A B
M11
B E
;
E F
dpiY
 
=
 
source
 
.
 
CompositionTarget
 /
.
/ 0
TransformToDevice
0 A
.
A B
M22
B E
;
E F
}
 
return
 
new
 
SKSizeI
 
(
 
(
  
int
  #
)
# $
(
$ %
currentWidth
% 1
*
2 3
dpiX
4 8
)
8 9
,
9 :
(
; <
int
< ?
)
? @
(
@ A
currentHeight
A N
*
O P
dpiY
Q U
)
U V
)
V W
;
W X
}
 	
	protected
 
override
 
void
 
OnRender
  (
(
( )
DrawingContext
) 7
drawingContext
8 F
)
F G
{
 	
if
 
(
 
	grContext
 
!=
 
null
 !
)
! "
{
 
	grContext
 
.
 
ResetContext
 &
(
& '
)
' (
;
( )
}
 
base
 
.
 
OnRender
 
(
 
drawingContext
 (
)
( )
;
) *
}
 	
	protected
¡¡ 
virtual
¡¡ 
void
¡¡ 
OnPaint
¡¡ &
(
¡¡& '
TimeSpan
¡¡' /
e
¡¡0 1
)
¡¡1 2
{
¢¢ 	
if
££ 
(
££ 
disposed
££ 
)
££ 
{
¤¤ 
return
¥¥ 
;
¥¥ 
}
¦¦ 
if
§§ 
(
§§ 

designMode
§§ 
)
§§ 
{
¨¨ 
return
©© 
;
©© 
}
ªª 
if
­­ 
(
­­ 
	grContext
­­ 
==
­­ 
null
­­ !
)
­­! "
{
®® 
var
¯¯ 
glInterface
¯¯ 
=
¯¯  !
GRGlInterface
¯¯" /
.
¯¯/ 0
Create
¯¯0 6
(
¯¯6 7
)
¯¯7 8
;
¯¯8 9
	grContext
°° 
=
°° 
	GRContext
°° %
.
°°% &
CreateGl
°°& .
(
°°. /
glInterface
°°/ :
)
°°: ;
;
°°; <
}
±± 
var
´´ 
newSize
´´ 
=
´´ 
GetSize
´´ !
(
´´! "
)
´´" #
;
´´# $
GL
¶¶ 
.
¶¶ 

ClearColor
¶¶ 
(
¶¶ 
Color4
¶¶  
.
¶¶  !
Transparent
¶¶! ,
)
¶¶, -
;
¶¶- .
GL
·· 
.
·· 
Clear
·· 
(
·· 
ClearBufferMask
·· $
.
··$ %
ColorBufferBit
··% 3
)
··3 4
;
··4 5
GL
¸¸ 
.
¸¸ 
Clear
¸¸ 
(
¸¸ 
ClearBufferMask
¸¸ $
.
¸¸$ %
ColorBufferBit
¸¸% 3
|
¸¸4 5
ClearBufferMask
¸¸6 E
.
¸¸E F
DepthBufferBit
¸¸F T
|
¸¸U V
ClearBufferMask
¸¸W f
.
¸¸f g
StencilBufferBit
¸¸g w
)
¸¸w x
;
¸¸x y
if
»» 
(
»» 
renderTarget
»» 
==
»» 
null
»»  $
||
»»% '
lastSize
»»( 0
!=
»»1 3
newSize
»»4 ;
||
»»< >
!
»»? @
renderTarget
»»@ L
.
»»L M
IsValid
»»M T
)
»»T U
{
¼¼ 
lastSize
¿¿ 
=
¿¿ 
newSize
¿¿ "
;
¿¿" #
GL
ÁÁ 
.
ÁÁ 

GetInteger
ÁÁ 
(
ÁÁ 
GetPName
ÁÁ &
.
ÁÁ& ' 
FramebufferBinding
ÁÁ' 9
,
ÁÁ9 :
out
ÁÁ; >
var
ÁÁ? B
framebuffer
ÁÁC N
)
ÁÁN O
;
ÁÁO P
GL
ÂÂ 
.
ÂÂ 

GetInteger
ÂÂ 
(
ÂÂ 
GetPName
ÂÂ &
.
ÂÂ& '
StencilBits
ÂÂ' 2
,
ÂÂ2 3
out
ÂÂ4 7
var
ÂÂ8 ;
stencil
ÂÂ< C
)
ÂÂC D
;
ÂÂD E
GL
ÃÃ 
.
ÃÃ 

GetInteger
ÃÃ 
(
ÃÃ 
GetPName
ÃÃ &
.
ÃÃ& '
Samples
ÃÃ' .
,
ÃÃ. /
out
ÃÃ0 3
var
ÃÃ4 7
samples
ÃÃ8 ?
)
ÃÃ? @
;
ÃÃ@ A
var
ÄÄ 

maxSamples
ÄÄ 
=
ÄÄ  
	grContext
ÄÄ! *
.
ÄÄ* +&
GetMaxSurfaceSampleCount
ÄÄ+ C
(
ÄÄC D
	colorType
ÄÄD M
)
ÄÄM N
;
ÄÄN O
if
ÅÅ 
(
ÅÅ 
samples
ÅÅ 
>
ÅÅ 

maxSamples
ÅÅ (
)
ÅÅ( )
samples
ÆÆ 
=
ÆÆ 

maxSamples
ÆÆ (
;
ÆÆ( )
glInfo
ÇÇ 
=
ÇÇ 
new
ÇÇ !
GRGlFramebufferInfo
ÇÇ 0
(
ÇÇ0 1
(
ÇÇ1 2
uint
ÇÇ2 6
)
ÇÇ6 7
framebuffer
ÇÇ7 B
,
ÇÇB C
	colorType
ÇÇD M
.
ÇÇM N
ToGlSizedFormat
ÇÇN ]
(
ÇÇ] ^
)
ÇÇ^ _
)
ÇÇ_ `
;
ÇÇ` a
surface
ÊÊ 
?
ÊÊ 
.
ÊÊ 
Dispose
ÊÊ  
(
ÊÊ  !
)
ÊÊ! "
;
ÊÊ" #
surface
ËË 
=
ËË 
null
ËË 
;
ËË 
canvas
ÌÌ 
=
ÌÌ 
null
ÌÌ 
;
ÌÌ 
renderTarget
ÏÏ 
?
ÏÏ 
.
ÏÏ 
Dispose
ÏÏ %
(
ÏÏ% &
)
ÏÏ& '
;
ÏÏ' (
renderTarget
ÐÐ 
=
ÐÐ 
new
ÐÐ "#
GRBackendRenderTarget
ÐÐ# 8
(
ÐÐ8 9
newSize
ÐÐ9 @
.
ÐÐ@ A
Width
ÐÐA F
,
ÐÐF G
newSize
ÐÐH O
.
ÐÐO P
Height
ÐÐP V
,
ÐÐV W
samples
ÐÐX _
,
ÐÐ_ `
stencil
ÐÐa h
,
ÐÐh i
glInfo
ÐÐj p
)
ÐÐp q
;
ÐÐq r
}
ÑÑ 
if
ÔÔ 
(
ÔÔ 
surface
ÔÔ 
==
ÔÔ 
null
ÔÔ 
)
ÔÔ  
{
ÕÕ 
surface
ÖÖ 
=
ÖÖ 
	SKSurface
ÖÖ #
.
ÖÖ# $
Create
ÖÖ$ *
(
ÖÖ* +
	grContext
ÖÖ+ 4
,
ÖÖ4 5
renderTarget
ÖÖ6 B
,
ÖÖB C
surfaceOrigin
ÖÖD Q
,
ÖÖQ R
	colorType
ÖÖS \
)
ÖÖ\ ]
;
ÖÖ] ^
canvas
×× 
=
×× 
surface
××  
.
××  !
Canvas
××! '
;
××' (
}
ØØ 
using
ÚÚ 
(
ÚÚ 
new
ÚÚ !
SKAutoCanvasRestore
ÚÚ *
(
ÚÚ* +
canvas
ÚÚ+ 1
,
ÚÚ1 2
true
ÚÚ3 7
)
ÚÚ7 8
)
ÚÚ8 9
{
ÛÛ 
OnPaintSurface
ÞÞ 
(
ÞÞ 
new
ÞÞ "'
SKPaintGLSurfaceEventArgs
ÞÞ# <
(
ÞÞ< =
surface
ÞÞ= D
,
ÞÞD E
renderTarget
ÞÞF R
,
ÞÞR S
surfaceOrigin
ÞÞT a
,
ÞÞa b
	colorType
ÞÞc l
,
ÞÞl m
glInfo
ÞÞn t
)
ÞÞt u
)
ÞÞu v
;
ÞÞv w
}
àà 
canvas
ãã 
.
ãã 
Flush
ãã 
(
ãã 
)
ãã 
;
ãã 
}
ää 	
	protected
ææ 
virtual
ææ 
void
ææ 
OnPaintSurface
ææ -
(
ææ- .'
SKPaintGLSurfaceEventArgs
ææ. G
e
ææH I
)
ææI J
{
çç 	
PaintSurface
éé 
?
éé 
.
éé 
Invoke
éé  
(
éé  !
this
éé! %
,
éé% &
e
éé' (
)
éé( )
;
éé) *
}
êê 	
private
ìì 
bool
ìì 
disposed
ìì 
=
ìì 
false
ìì  %
;
ìì% &
	protected
ïï 
virtual
ïï 
void
ïï 
Dispose
ïï &
(
ïï& '
bool
ïï' +
	disposing
ïï, 5
)
ïï5 6
{
ðð 	
if
ññ 
(
ññ 
disposed
ññ 
)
ññ 
{
òò 
return
óó 
;
óó 
}
ôô 
canvas
÷÷ 
=
÷÷ 
null
÷÷ 
;
÷÷ 
surface
øø 
?
øø 
.
øø 
Dispose
øø 
(
øø 
)
øø 
;
øø 
surface
ùù 
=
ùù 
null
ùù 
;
ùù 
renderTarget
úú 
?
úú 
.
úú 
Dispose
úú !
(
úú! "
)
úú" #
;
úú# $
renderTarget
ûû 
=
ûû 
null
ûû 
;
ûû  
	grContext
üü 
?
üü 
.
üü 
Dispose
üü 
(
üü 
)
üü  
;
üü  !
	grContext
ýý 
=
ýý 
null
ýý 
;
ýý 
listener
þþ 
?
þþ 
.
þþ 
Dispose
þþ 
(
þþ 
)
þþ 
;
þþ  
listener
ÿÿ 
=
ÿÿ 
null
ÿÿ 
;
ÿÿ 
disposed
 
=
 
true
 
;
 
}
 	
public
 
void
 
Dispose
 
(
 
)
 
{
 	
Dispose
 
(
 
true
 
)
 
;
 
}
 	
}
 
} 
`C:\Users\there\source\ScottPlot\src\ScottPlot5\ScottPlot5 Controls\ScottPlot.WPF\AssemblyInfo.cs
[ 
assembly 	
:	 

	ThemeInfo 
( &
ResourceDictionaryLocation 
. 
None #
,# $&
ResourceDictionaryLocation 
. 
SourceAssembly -
)

 
]

 